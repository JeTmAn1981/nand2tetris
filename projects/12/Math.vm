function Math.init 0
push constant 0
return
function Math.abs 0
push constant 0
return
function Math.multiply 4
push constant 1
pop local 0
push constant 0
pop local 1
push argument 0
pop local 3
push constant 0
pop local 2
label WHILE_EXP0
push local 1
push constant 15
lt
not
if-goto WHILE_END0
push argument 1
push local 0
and
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
push local 3
add
pop local 2
label IF_FALSE0
push local 3
push local 3
add
pop local 3
push local 0
push local 0
add
pop local 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 2
return
function Math.sqrt 3
push constant 0
pop local 0
push constant 15
pop local 2
push local 2
push constant 2
call Math.divide 2
push constant 1
sub
pop local 1
label WHILE_EXP0
push local 1
push constant 1
neg
gt
not
if-goto WHILE_END0
push constant 4
call String.new 1
push constant 121
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 61
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push local 0
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push constant 4
call String.new 1
push constant 106
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 61
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push local 1
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push constant 4
call String.new 1
push constant 110
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 61
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push local 2
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push local 0
push constant 2
push local 1
call Math.exp 2
add
push constant 2
call Math.exp 2
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push local 0
push constant 2
push local 1
call Math.exp 2
add
push constant 2
call Math.exp 2
push argument 0
push constant 1
add
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 2
push local 1
call Math.exp 2
add
pop local 0
label IF_FALSE0
push local 2
push constant 1
sub
pop local 2
push local 2
push constant 2
call Math.divide 2
push constant 1
sub
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Math.exp 1
push argument 0
pop local 0
push argument 1
push constant 1
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
return
label IF_FALSE0
label WHILE_EXP0
push argument 1
push constant 1
gt
not
if-goto WHILE_END0
push argument 0
push local 0
call Math.multiply 2
pop argument 0
push argument 1
push constant 1
sub
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push argument 0
return
function Math.max 0
push constant 0
return
function Math.min 0
push constant 0
return
