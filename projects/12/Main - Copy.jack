// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/OutputTest/Main.jack

/** Test program for the OS Output class. */
class Main {
static int cursorx;

    /** Outputs the entire character set to the screen using all the
     *  methods of the Output class. */
    function void main() {
        var String s;
		var Array screen;
		
		do Output.printChar(65);
		do Output.printChar(66);
	
		let screen = 16384;
		let cursorx = 1;
		
		do Output.println();
		do Output.printString("screen val: ");
		do Output.printInt(screen[32]);
		do Output.println();
	
	
	do Main.combineWordValues(screen[32],31);
	//do Output.printInt(Main.combineWordValues(screen[32],31));
		
		
		return;
    
	
    	let s = String.new(1);
    	do s.appendChar(String.doubleQuote());
    
	
	    do Output.moveCursor(0, 63);
        do Output.printChar(66);
        do Output.moveCursor(22, 0);
        do Output.printChar(67);
        do Output.moveCursor(22, 63);
        do Output.printChar(68);
        do Output.printChar(65);
        
        do Output.moveCursor(2, 0);
        do Output.printString("0123456789");
        do Output.println();
        
        do Output.printString("ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz");
        do Output.println();
        
        do Output.printString("!#$%&'()*+,-./:;<=>?@[\]^_`{|}~");
        do Output.printString(s);
        do Output.println();
        
        do Output.printInt(-12345);
        do Output.backSpace();
        do Output.printInt(6789);
        
        return;
    }

	function int combineWordValues(int existingValue, int newValue)
	{
		var Array word;
		var int counter, sum, mask,newstart,newend,newmask,existingstart,existingend,existingmask;
		
		let word = Memory.alloc(16);
	
	let mask = 1;
	let counter = 0;
	while (counter < 15)
	{
		if (~(existingValue & mask = 0)) { let word[counter] = 1;}
		
		let mask = mask + mask;
		let counter = counter + 1;
	}
	
	let counter = 15;
	
	do Output.printString("actual number: ");
	
	while (counter > -1)
	{
		do Output.printInt(word[counter]);
		
		let counter = counter - 1;
	}
	
	do Output.println();
	
	
	
	do Output.printString("displayed as:  ");
	
	let counter = 0;
	
	while (counter < 16)
	{
		do Output.printInt(word[counter]);
		
		let counter = counter + 1;
	}
	
	
	return 0;
	
		//Value exists in right half of 16-bit word
		if (Main.isOdd(cursorx))
		{
			let existingmask = 256;
			let existingstart = 8;
			let existingend = 15;
			
			let replacestart = 0;
			let replaceend = 8;
			
			let newmask = 1;
			let newstart = 0;
			let newend = 8;
		}
		//Value exists in left half of 16-bit word
		else
		{
		
			let replacestart = 8;
			let replaceend = 16;
			
			let existingmask = 1;
			let existingstart = 0;
			let existingend = 8;
			
			let newmask = 256;
			let newstart = 8;
			let newend = 15;
		}
	
	
		let counter = replacestart;
		let mask = 1;
		
		while (counter < replaceend)
		{
			if (~(newValue & mask = 0)) { let word[counter] = 1}
			else { let word[counter] = 0;}
		
			let mask = mask + mask;
			let counter = counter + 1;
		}
			
		let counter = existingstart;
		
		while (counter < existingend)
		{
		
			if (~((existingValue & existingmask) = 0)) { let word[counter] = 1; do Output.printInt(1); }
			else { do Output.printInt(0); }
			let counter = counter + 1;
			let existingmask = existingmask + existingmask;
		}
		
		do Output.println();
		
		let counter = newstart;
		
		while (counter < newend)
		{
			do Main.printval("new mask:" ,newmask);
	
		
			if (~((newValue & newmask) = 0)) { let word[counter] = 1; do Output.printInt(1);}
			else { do Output.printInt(0); }
			
			let counter = counter + 1;
			let newmask = newmask + newmask;
		}
		
do Output.println();
		
		
		let counter = 0;
		let mask = 1;
		
		while (counter < 16)
		{
			if (word[counter] = 1)
			{
				let sum = sum + mask;
			}
			
			let counter = counter + 1;
			let mask = mask + mask;
		}
			
		return sum;
	}

	
	function void printval(String label, int value)
	{
		do Output.printString(label);
		do Output.printInt(value);
		do Output.println();
	
		return;
	}
	


	function boolean isOdd(int value)
	{
		if (~((value & 1) = 0))
		{
			return true;
		}
	
		return false;
	}	
}

