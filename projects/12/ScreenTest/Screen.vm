function Screen.init 0
push constant 16384
pop static 0
push constant 1
neg
pop static 1
push constant 0
return
function Screen.clearScreen 0
push constant 0
return
function Screen.setColor 0
push argument 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
neg
pop static 1
goto IF_END0
label IF_FALSE0
push constant 0
pop static 1
label IF_END0
push constant 0
return
function Screen.drawPixel 4
label WHILE_EXP0
push local 3
push constant 15
add
push argument 0
lt
not
if-goto WHILE_END0
push local 0
push constant 1
add
pop local 0
push local 3
push constant 16
add
pop local 3
goto WHILE_EXP0
label WHILE_END0
push argument 0
push local 3
sub
pop local 1
push static 0
push constant 32
push argument 1
call Math.multiply 2
add
push local 0
add
pop local 2
push local 2
push local 2
call Memory.peek 1
push local 1
call Screen.togglepixelposition 2
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.printval 0
push argument 0
call Output.printString 1
pop temp 0
push argument 1
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push constant 0
return
function Screen.togglepixelposition 4
push constant 0
not
pop local 3
push constant 0
pop local 2
push constant 1
pop local 0
label WHILE_EXP0
push local 3
not
if-goto WHILE_END0
push local 1
push constant 15
gt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push argument 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push static 1
push constant 1
neg
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 2
push local 0
add
pop local 2
label IF_FALSE2
goto IF_END1
label IF_FALSE1
push argument 0
push local 0
and
push constant 0
eq
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 2
push local 0
add
pop local 2
label IF_FALSE3
label IF_END1
goto IF_END0
label IF_FALSE0
push constant 0
pop local 3
label IF_END0
push local 1
push constant 1
add
pop local 1
push local 0
push local 0
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 2
return
function Screen.drawLine 10
push argument 2
push argument 0
sub
pop local 0
push argument 3
push argument 1
sub
pop local 1
push local 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
neg
pop local 2
goto IF_END0
label IF_FALSE0
push local 0
push constant 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
pop local 2
label IF_FALSE1
label IF_END0
push local 1
push constant 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
neg
pop local 3
goto IF_END2
label IF_FALSE2
push local 1
push constant 0
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 1
pop local 3
label IF_FALSE3
label IF_END2
push local 0
push constant 0
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 1
neg
pop local 4
goto IF_END4
label IF_FALSE4
push local 0
push constant 0
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 1
pop local 4
label IF_FALSE5
label IF_END4
push local 0
call Math.abs 1
pop local 6
push local 1
call Math.abs 1
pop local 7
push local 6
push local 7
gt
not
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 1
call Math.abs 1
pop local 6
push local 0
call Math.abs 1
pop local 7
push local 1
push constant 0
lt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 1
neg
pop local 5
goto IF_END7
label IF_FALSE7
push local 1
push constant 0
gt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push constant 1
pop local 5
label IF_FALSE8
label IF_END7
push constant 0
pop local 4
label IF_FALSE6
push local 6
call Screen.bitshiftRight 1
pop local 8
label WHILE_EXP0
push local 9
push local 6
push constant 1
add
lt
not
if-goto WHILE_END0
push argument 0
push argument 1
call Screen.drawPixel 2
pop temp 0
push local 8
push local 7
add
pop local 8
push local 8
push local 6
lt
not
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push local 8
push local 6
sub
pop local 8
push argument 0
push local 2
add
pop argument 0
push argument 1
push local 3
add
pop argument 1
goto IF_END9
label IF_FALSE9
push argument 0
push local 4
add
pop argument 0
push argument 1
push local 5
add
pop argument 1
label IF_END9
push local 9
push constant 1
add
pop local 9
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.bitshiftRight 3
push constant 0
pop local 1
push constant 1
pop local 0
label WHILE_EXP0
push local 2
push constant 15
lt
not
if-goto WHILE_END0
push argument 0
push local 0
push local 0
add
and
not
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push local 0
add
pop local 1
label IF_FALSE0
push local 0
push local 0
add
pop local 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push argument 0
push local 0
push local 0
add
and
not
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
neg
return
goto IF_END1
label IF_FALSE1
push local 1
return
label IF_END1
function Screen.drawRectangle 1
push argument 1
pop local 0
label WHILE_EXP0
push local 0
push argument 3
lt
not
if-goto WHILE_END0
push argument 0
push local 0
push argument 2
push local 0
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push argument 0
push local 0
push argument 2
push local 0
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Screen.drawCircle 2
push argument 2
neg
pop local 0
label WHILE_EXP0
push local 0
push argument 2
eq
not
not
if-goto WHILE_END0
push argument 2
push argument 2
call Math.multiply 2
push local 0
push local 0
call Math.multiply 2
sub
call Math.sqrt 1
pop local 1
push argument 0
push local 1
sub
push argument 1
push local 0
add
push argument 0
push local 1
add
push argument 1
push local 0
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push argument 2
push argument 2
call Math.multiply 2
push local 0
push local 0
call Math.multiply 2
sub
call Math.sqrt 1
pop local 1
push argument 0
push local 1
sub
push argument 1
push local 0
add
push argument 0
push local 1
add
push argument 1
push local 0
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
