// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A basic math library.
 */
class Math {

    /** Initializes the library. */
    function void init() {
    
	return; }

    /** Returns the absolute value of x. */
    function int abs(int x) {
    return 0; }

    /** Returns the product of x and y. */
    function int multiply(int x, int y) {
	var int mask, maskCounter, sum, shiftedX;
	
	let mask = 1;
	let maskCounter = 0;
	let shiftedX = x;
	let sum = 0;
	
	while (maskCounter < 15)
	{
		if (~((y & mask) = 0))
		{
			let sum = sum + shiftedX;
		}
	
		let shiftedX = shiftedX + shiftedX;	
		let mask = mask + mask;
		let maskCounter = maskCounter + 1;
	}
	
	return sum; 
	}

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
    var int y, j, n;
	
	let y = 0;
	let n = 15;
	let j = (n / 2) - 1;
	
	while (j > -1)
	{
		do Output.printString("y = ");
		do Output.printInt(y);
		do Output.println();
		
		do Output.printString("j = ");
		do Output.printInt(j);
		do Output.println();
		
		do Output.printString("n = ");
		do Output.printInt(n);
		do Output.println();
		
		//do Output.printString("(y + 2^j)^2 = ");
		do Output.printInt(Math.exp(y + Math.exp(2,j),2));
		do Output.println();
		
		if (Math.exp(y + Math.exp(2,j),2) < (x + 1))
		{
			let y = y + Math.exp(2, j);
		}
	
		let n = n - 1;
		let j = (n / 2) - 1;
	}

	return y;
	}
	
	function int exp(int value, int power)
	{
		var int originalValue;
		
		let originalValue = value;
	
		if (power < 1)
		{
			return 1;
		}
	
		while (power > 1)
		{
			let value = value * originalValue;
			let power = power - 1;
		}
		
		return value;
	}
	
    /** Returns the greater number. */
    function int max(int a, int b) {
    return 0; }

    /** Returns the smaller number. */
    function int min(int a, int b) {
    return 0; }
}
